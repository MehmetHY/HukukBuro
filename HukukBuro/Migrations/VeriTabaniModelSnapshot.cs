// <auto-generated />
using System;
using HukukBuro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HukukBuro.Migrations
{
    [DbContext(typeof(VeriTabani))]
    partial class VeriTabaniModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HukukBuro.Models.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Okundu")
                        .HasColumnType("bit");

                    b.Property<string>("PersonelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("HukukBuro.Models.BolgeAdliyeMahkemesiBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("EsasNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GondermeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KararNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KararOzeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KararTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mahkeme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TebligTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId")
                        .IsUnique();

                    b.ToTable("BolgeAdliyeMahkemesiBilgileri");
                });

            modelBuilder.Entity("HukukBuro.Models.Dosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AcilisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuroNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaDurumuId")
                        .HasColumnType("int");

                    b.Property<int>("DosyaKategorisiId")
                        .HasColumnType("int");

                    b.Property<string>("DosyaNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaTuruId")
                        .HasColumnType("int");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mahkeme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaDurumuId");

                    b.HasIndex("DosyaKategorisiId");

                    b.HasIndex("DosyaTuruId");

                    b.ToTable("Dosyalar");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaBaglantisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<int>("IlgiliDosyaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("IlgiliDosyaId");

                    b.ToTable("DosyaBaglantilari");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaBelgesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Boyut")
                        .HasColumnType("bigint");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uzanti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.ToTable("DosyaBelgeleri");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DosyaDurumu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Açık"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Arşiv"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "Derdest"
                        },
                        new
                        {
                            Id = 4,
                            Isim = "Hazırlık"
                        },
                        new
                        {
                            Id = 5,
                            Isim = "İstinaf"
                        },
                        new
                        {
                            Id = 6,
                            Isim = "Kapalı (Aciz Vesikası)"
                        },
                        new
                        {
                            Id = 7,
                            Isim = "Kapalı (İnfaz)"
                        },
                        new
                        {
                            Id = 8,
                            Isim = "Karar"
                        },
                        new
                        {
                            Id = 9,
                            Isim = "Temyiz"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaKategorisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DosyaKategorileri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Asliye Hukuk"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Aylık Hukuk Danışmanlık"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "İcra"
                        },
                        new
                        {
                            Id = 4,
                            Isim = "İdare Mahkemesi"
                        },
                        new
                        {
                            Id = 5,
                            Isim = "İş Mahkemesi"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaPersonel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("PersonelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("PersonelId");

                    b.ToTable("DosyaPersonel");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DosyaTurleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Dava"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Danışmanlık"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "İcra"
                        },
                        new
                        {
                            Id = 4,
                            Isim = "Arabuluculuk"
                        },
                        new
                        {
                            Id = 5,
                            Isim = "Soruşturma"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.Durusma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AktiviteTuruId")
                        .HasColumnType("int");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("Tamamlandi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AktiviteTuruId");

                    b.HasIndex("DosyaId");

                    b.ToTable("Durusmalar");
                });

            modelBuilder.Entity("HukukBuro.Models.DurusmaAktiviteTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DurusmaAktiviteTurleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Duruşma"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Keşif"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "İnceleme"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.Duyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("HukukBuro.Models.FinansIslemi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DosyaBaglantisiVar")
                        .HasColumnType("bit");

                    b.Property<int?>("DosyaId")
                        .HasColumnType("int");

                    b.Property<int>("IslemTuru")
                        .HasColumnType("int");

                    b.Property<string>("IslemYapanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("KisiBaglantisiVar")
                        .HasColumnType("bit");

                    b.Property<int?>("KisiId")
                        .HasColumnType("int");

                    b.Property<bool>("MakbuzKesildiMi")
                        .HasColumnType("bit");

                    b.Property<string>("MakbuzNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MakbuzTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("OdemeTarhi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Odendi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PersonelBaglantisiVar")
                        .HasColumnType("bit");

                    b.Property<string>("PersonelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("SonOdemeTarhi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("IslemYapanId");

                    b.HasIndex("KisiId");

                    b.HasIndex("PersonelId");

                    b.ToTable("FinansIslemleri");
                });

            modelBuilder.Entity("HukukBuro.Models.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaglantiTuru")
                        .HasColumnType("int");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DosyaId")
                        .HasColumnType("int");

                    b.Property<int>("DurumId")
                        .HasColumnType("int");

                    b.Property<int?>("KisiId")
                        .HasColumnType("int");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SorumluId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("DurumId");

                    b.HasIndex("KisiId");

                    b.HasIndex("SorumluId");

                    b.ToTable("Gorevler");
                });

            modelBuilder.Entity("HukukBuro.Models.GorevDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GorevDurumlari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Tamamlandı"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Devam Ediyor"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "İptal"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.KararBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("KararNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KararOzeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KararTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TebligTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId")
                        .IsUnique();

                    b.ToTable("KararBilgileri");
                });

            modelBuilder.Entity("HukukBuro.Models.KararDuzeltmeBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("EsasNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GondermeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KararNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KararOzeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KararTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mahkeme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TebligTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId")
                        .IsUnique();

                    b.ToTable("KararDuzeltmeBilgileri");
                });

            modelBuilder.Entity("HukukBuro.Models.KesinlesmeBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("KararOzeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KesinlesmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId")
                        .IsUnique();

                    b.ToTable("KesinlesmeBilgileri");
                });

            modelBuilder.Entity("HukukBuro.Models.Kisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankaHesapBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EkBilgi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KimlikNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kisaltma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SirketIsmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TuzelMi")
                        .HasColumnType("bit");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kisiler");
                });

            modelBuilder.Entity("HukukBuro.Models.KisiBaglantisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IlgiliKisiId")
                        .HasColumnType("int");

                    b.Property<int>("KisiId")
                        .HasColumnType("int");

                    b.Property<string>("Pozisyon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IlgiliKisiId");

                    b.HasIndex("KisiId");

                    b.ToTable("KisiBaglantilari");
                });

            modelBuilder.Entity("HukukBuro.Models.KisiBelgesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Boyut")
                        .HasColumnType("bigint");

                    b.Property<int>("KisiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OzelMi")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uzanti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KisiId");

                    b.ToTable("KisiBelgeleri");
                });

            modelBuilder.Entity("HukukBuro.Models.Ofis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ofis");
                });

            modelBuilder.Entity("HukukBuro.Models.Personel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HukukBuro.Models.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KisiId")
                        .HasColumnType("int");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SorumluId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("TamamlandiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KisiId");

                    b.HasIndex("SorumluId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("HukukBuro.Models.TarafKisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("KarsiTaraf")
                        .HasColumnType("bit");

                    b.Property<int>("KisiId")
                        .HasColumnType("int");

                    b.Property<int>("TarafTuruId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("KisiId");

                    b.HasIndex("TarafTuruId");

                    b.ToTable("TarafKisiler");
                });

            modelBuilder.Entity("HukukBuro.Models.TarafTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TarafTurleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Davacı"
                        },
                        new
                        {
                            Id = 2,
                            Isim = "Davalı"
                        },
                        new
                        {
                            Id = 3,
                            Isim = "Diğer"
                        },
                        new
                        {
                            Id = 4,
                            Isim = "Avukat"
                        },
                        new
                        {
                            Id = 5,
                            Isim = "Alacaklı"
                        },
                        new
                        {
                            Id = 6,
                            Isim = "Borçlu"
                        });
                });

            modelBuilder.Entity("HukukBuro.Models.TemyizBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<string>("EsasNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GondermeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KararNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KararOzeti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KararTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mahkeme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TebligTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId")
                        .IsUnique();

                    b.ToTable("TemyizBilgileri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "KisiYoneticisi",
                            Name = "KisiYoneticisi",
                            NormalizedName = "KISIYONETICISI"
                        },
                        new
                        {
                            Id = "DosyaYoneticisi",
                            Name = "DosyaYoneticisi",
                            NormalizedName = "DOSYAYONETICISI"
                        },
                        new
                        {
                            Id = "PersonelYoneticisi",
                            Name = "PersonelYoneticisi",
                            NormalizedName = "PERSONELYONETICISI"
                        },
                        new
                        {
                            Id = "GorevYoneticisi",
                            Name = "GorevYoneticisi",
                            NormalizedName = "GOREVYONETICISI"
                        },
                        new
                        {
                            Id = "DuyuruYoneticisi",
                            Name = "DuyuruYoneticisi",
                            NormalizedName = "DUYURUYONETICISI"
                        },
                        new
                        {
                            Id = "RolYoneticisi",
                            Name = "RolYoneticisi",
                            NormalizedName = "ROLYONETICISI"
                        },
                        new
                        {
                            Id = "FinansYoneticisi",
                            Name = "FinansYoneticisi",
                            NormalizedName = "FINANSYONETICISI"
                        },
                        new
                        {
                            Id = "RandevuYoneticisi",
                            Name = "RandevuYoneticisi",
                            NormalizedName = "RANDEVUYONETICISI"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HukukBuro.Models.Bildirim", b =>
                {
                    b.HasOne("HukukBuro.Models.Personel", "Personel")
                        .WithMany("Bildirimler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("HukukBuro.Models.BolgeAdliyeMahkemesiBilgileri", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithOne("BolgeAdliyeMahkemesiBilgileri")
                        .HasForeignKey("HukukBuro.Models.BolgeAdliyeMahkemesiBilgileri", "DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.Dosya", b =>
                {
                    b.HasOne("HukukBuro.Models.DosyaDurumu", "DosyaDurumu")
                        .WithMany()
                        .HasForeignKey("DosyaDurumuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.DosyaKategorisi", "DosyaKategorisi")
                        .WithMany()
                        .HasForeignKey("DosyaKategorisiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.DosyaTuru", "DosyaTuru")
                        .WithMany()
                        .HasForeignKey("DosyaTuruId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DosyaDurumu");

                    b.Navigation("DosyaKategorisi");

                    b.Navigation("DosyaTuru");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaBaglantisi", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("IlgiliDosyalar")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Dosya", "IlgiliDosya")
                        .WithMany()
                        .HasForeignKey("IlgiliDosyaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("IlgiliDosya");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaBelgesi", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("Belgeler")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.DosyaPersonel", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("SorumluPersonel")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Personel", "Personel")
                        .WithMany("SorumluDosyalar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("HukukBuro.Models.Durusma", b =>
                {
                    b.HasOne("HukukBuro.Models.DurusmaAktiviteTuru", "AktiviteTuru")
                        .WithMany()
                        .HasForeignKey("AktiviteTuruId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("Durusmalar")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AktiviteTuru");

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.FinansIslemi", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("IlgiliFinansIslemleri")
                        .HasForeignKey("DosyaId");

                    b.HasOne("HukukBuro.Models.Personel", "IslemYapan")
                        .WithMany("SorumluFinansIslemleri")
                        .HasForeignKey("IslemYapanId");

                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("IlgiliFinansIslemleri")
                        .HasForeignKey("KisiId");

                    b.HasOne("HukukBuro.Models.Personel", "Personel")
                        .WithMany("IlgiliFinansIslemleri")
                        .HasForeignKey("PersonelId");

                    b.Navigation("Dosya");

                    b.Navigation("IslemYapan");

                    b.Navigation("Kisi");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("HukukBuro.Models.Gorev", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("IlgiliGorevler")
                        .HasForeignKey("DosyaId");

                    b.HasOne("HukukBuro.Models.GorevDurumu", "Durum")
                        .WithMany()
                        .HasForeignKey("DurumId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("IlgiliGorevler")
                        .HasForeignKey("KisiId");

                    b.HasOne("HukukBuro.Models.Personel", "Sorumlu")
                        .WithMany("SorumluGorevler")
                        .HasForeignKey("SorumluId");

                    b.Navigation("Dosya");

                    b.Navigation("Durum");

                    b.Navigation("Kisi");

                    b.Navigation("Sorumlu");
                });

            modelBuilder.Entity("HukukBuro.Models.KararBilgileri", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithOne("KararBilgileri")
                        .HasForeignKey("HukukBuro.Models.KararBilgileri", "DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.KararDuzeltmeBilgileri", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithOne("KararDuzeltmeBilgileri")
                        .HasForeignKey("HukukBuro.Models.KararDuzeltmeBilgileri", "DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.KesinlesmeBilgileri", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithOne("KesinlesmeBilgileri")
                        .HasForeignKey("HukukBuro.Models.KesinlesmeBilgileri", "DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("HukukBuro.Models.KisiBaglantisi", b =>
                {
                    b.HasOne("HukukBuro.Models.Kisi", "IlgiliKisi")
                        .WithMany()
                        .HasForeignKey("IlgiliKisiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("IlgiliKisiler")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IlgiliKisi");

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("HukukBuro.Models.KisiBelgesi", b =>
                {
                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("Belgeler")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("HukukBuro.Models.Randevu", b =>
                {
                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("Randevular")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Personel", "Sorumlu")
                        .WithMany("SorumluRandevular")
                        .HasForeignKey("SorumluId");

                    b.Navigation("Kisi");

                    b.Navigation("Sorumlu");
                });

            modelBuilder.Entity("HukukBuro.Models.TarafKisi", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithMany("Taraflar")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Kisi", "Kisi")
                        .WithMany("IlgiliDosyalar")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.TarafTuru", "TarafTuru")
                        .WithMany()
                        .HasForeignKey("TarafTuruId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dosya");

                    b.Navigation("Kisi");

                    b.Navigation("TarafTuru");
                });

            modelBuilder.Entity("HukukBuro.Models.TemyizBilgileri", b =>
                {
                    b.HasOne("HukukBuro.Models.Dosya", "Dosya")
                        .WithOne("TemyizBilgileri")
                        .HasForeignKey("HukukBuro.Models.TemyizBilgileri", "DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HukukBuro.Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HukukBuro.Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HukukBuro.Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HukukBuro.Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HukukBuro.Models.Dosya", b =>
                {
                    b.Navigation("Belgeler");

                    b.Navigation("BolgeAdliyeMahkemesiBilgileri");

                    b.Navigation("Durusmalar");

                    b.Navigation("IlgiliDosyalar");

                    b.Navigation("IlgiliFinansIslemleri");

                    b.Navigation("IlgiliGorevler");

                    b.Navigation("KararBilgileri");

                    b.Navigation("KararDuzeltmeBilgileri");

                    b.Navigation("KesinlesmeBilgileri");

                    b.Navigation("SorumluPersonel");

                    b.Navigation("Taraflar");

                    b.Navigation("TemyizBilgileri");
                });

            modelBuilder.Entity("HukukBuro.Models.Kisi", b =>
                {
                    b.Navigation("Belgeler");

                    b.Navigation("IlgiliDosyalar");

                    b.Navigation("IlgiliFinansIslemleri");

                    b.Navigation("IlgiliGorevler");

                    b.Navigation("IlgiliKisiler");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("HukukBuro.Models.Personel", b =>
                {
                    b.Navigation("Bildirimler");

                    b.Navigation("IlgiliFinansIslemleri");

                    b.Navigation("SorumluDosyalar");

                    b.Navigation("SorumluFinansIslemleri");

                    b.Navigation("SorumluGorevler");

                    b.Navigation("SorumluRandevular");
                });
#pragma warning restore 612, 618
        }
    }
}
